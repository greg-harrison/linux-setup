if [[ $TERM == 'screen-256color' ]]; then
  export TERM=screen
fi
if [[ `uname` == 'Darwin' ]]; then
  if [[ $TERM == "screen" && -z $REATTACHED ]]; then
    export REATTACHED=1
    exec reattach-to-user-namespace -l zsh
  fi
  export IS_OSX=1
fi

function upsert_path {
  if [ "$(echo $PATH | grep $1)" = "" ]; then
    if [ $2 = "left" ]; then
      export PATH="$1:$PATH"
    else
      export PATH="$PATH:$1"
    fi
  fi
}

export RCDIR=$HOME/.rc
export TRIP_RCDIR=$HOME/.trip_rc

if [ $IS_OSX ]; then
  upsert_path '/usr/local/bin' left
  if [ -z "$(echo $PATH | grep -E '(^|:)/usr/local/bin:.*:/usr/bin(:|$)')" ]; then
    export PATH="/usr/local/bin":$PATH
  fi
  upsert_path "$HOME/.cabal/bin" left
  if [ -z "$(echo $PATH | grep -E '(^|:)\.cabal:.*:/usr/local/bin(:|$)')" ]; then
    export PATH="$HOME/.cabal/bin":$PATH
  fi
fi

if [ -d "$RCDIR/bin" ] ; then
  upsert_path "$RCDIR/bin" left
fi

if [ -d "$HOME/.cabal/bin" ] ; then
  upsert_path "$HOME/.cabal/bin" left
fi

export RVM_HOME=$HOME/.rvm

# rvm!
[[ -s "$RVM_HOME/scripts/rvm" ]] && . "$RVM_HOME/scripts/rvm"

export POWERLINE_DIR=$RCDIR/powerline
export ZSH=$RCDIR/submodules/oh-my-zsh.git
export ZSH_THEME="af-magic"

#plugins=(vi-mode rvm tmux)
plugins=(rvm tmux git node npm bower colorize)

source $RCDIR/submodules/oh-my-zsh.git/oh-my-zsh.sh
source $RCDIR/submodules/zsh-syntax-highlighting.git/zsh-syntax-highlighting.zsh
source $RCDIR/submodules/zsh-history-substring-search.git/zsh-history-substring-search.zsh
[[ -n "${key[Up]}"   ]] && bindkey "${key[Up]}"   history-substring-search-up
[[ -n "${key[Down]}" ]] && bindkey "${key[Down]}" history-substring-search-down
export PROMPT="$PROMPT%{$(echo "\a")%}"

# Time commands that take >10s to finish
export REPORTTIME=10

# ctrl+s shouldn't freeze
stty ixany
stty ixoff -ixon

setopt INC_APPEND_HISTORY

# vim stuff
autoload -U edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line
bindkey '^Xe' edit-command-line
export EDITOR="vim -X"

#fancy ctl-z for vim
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
      zle accept-line
  else
    zle push-input
      zle clear-screen
      fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

# For tmux
export DISPLAY=:0.0
unset DBUS_SESSION_BUS_ADDRESS

# other cool keyboard shortcuts
bindkey '^Xp' push-line
zle -N rerun-with-sudo
bindkey '^Xx' rerun-with-sudo

function rerun-with-sudo  {
  LBUFFER="sudo !!"
  zle accept-line
}

function get_diff_out {
  GIT_DIFF_OUT=~/diffs/`git branch --no-color | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`.diff 
}

function git_diff {
  get_diff_out
  if [ "$1" = "c" ]
  then
    rm -f $GIT_DIFF_OUT 2> /dev/null
    rm -f $GIT_DIFF_OUT.old 2> /dev/null
  fi
  cp "$GIT_DIFF_OUT" "$GIT_DIFF_OUT.old" 2> /dev/null
  git svn-diff > $GIT_DIFF_OUT
  if [ -e "$GIT_DIFF_OUT.old" ]
  then
    diff $GIT_DIFF_OUT.old $GIT_DIFF_OUT
  else
    cat $GIT_DIFF_OUT
  fi
}

function -- {
  popd
}

function tmd {
  tmux attach-session -dt $1
}

function tm {
  tmux attach-session -t $1
}

function suspend {
  sudo su -c 'gnome-screensaver-command --lock && dbus-send --system --print-reply --dest="org.freedesktop.UPower" /org/freedesktop/UPower org.freedesktop.UPower.Suspend'
}

function sst {
  svn stat --ignore-externals $@ | grep -v '^[?X]'
}

function scl {
  cl=$1
  shift
  if [ $ARGC -eq 0 ]; then
    sst --changelist $cl
  else
    svn $@ --changelist $cl
  fi
}

function lkill {
  kill -9 `ps | grep $1 | grep -v grep | awk '{print $1}'`
}

#oh-my-zsh git_prompt_info and git_prompt_status can be slow
function git_prompt_info() {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo "$ZSH_THEME_GIT_PROMPT_PREFIX${ref#refs/heads/}$ZSH_THEME_GIT_PROMPT_SUFFIX"
}

function git_prompt_status() {
}

function run_docker {
  sudo docker build -t ${PWD##*/} --rm=true .;
  sudo docker run -it --rm -p $1 --name ${PWD##*/}-run ${PWD##*/};
}

function build_docker {
  sudo docker build -t ${PWD##*/} --rm=true .;
  sudo docker run -it -d --name ${PWD##*/}-run ${PWD##*/};
  sudo rm -r $PWD/$1
  sudo docker cp ${PWD##*/}-run:/opt/build/$1 $PWD
  sudo docker stop ${PWD##*/}-run
  sudo docker rm ${PWD##*/}-run
  sudo docker rmi ${PWD##*/}
}

alias lsdf='get_diff_out;cat ;echo ;'
alias rb='git svn rebase'
alias sdf=git_diff
alias up=run_docker
alias build=build_docker
alias cleandockerimages="sudo docker images --no-trunc | grep none | awk '{print $3}' | xargs -r sudo docker rmi"
alias cleandockercontainers="sudo docker ps -a --no-trunc | grep 'Exit' | awk '{print $1}' | xargs -r sudo docker rm"
alias cleandockervolumes="sudo docker run -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker:/var/lib/docker --rm martin/docker-cleanup-volumes:1.7.0"
alias cleandocker="cleandockercontainers;cleandockerimages"
alias cleandockerall="cleandocker;cleandockervolumes"
alias yu='sudo apt-get update && sudo apt-get upgrade'
alias xp='echo "WM_CLASS(STRING) = \"NAME\", \"CLASS\"" && xprop | grep "WM_WINDOW_ROLE\|WM_CLASS"'
alias todo="$HOME/software/todo.txt-cli/todo.sh"
alias ack='ag'
alias glo='killall gnome-session'
alias jsonlint='python -mjson.tool'

if [ $IS_OSX ]; then
  alias ls='ls -G'
  alias o=open
else
  alias ls='ls --color=auto'
  alias o=gnome-open
fi
alias ll='ls -lh'

if [ -d "$TRIP_RCDIR" ]; then
  upsert_path "$TRIP_RCDIR/bin" left
  source $TRIP_RCDIR/trip_zsh
else
  unset TRIP_RCDIR
fi

if [ -f "$HOME/.zsh.local" ]; then
  source $HOME/.zsh.local
fi
